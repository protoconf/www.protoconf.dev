"use strict";(self.webpackChunkprotoconf=self.webpackChunkprotoconf||[]).push([[2857],{6942:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var o=t(4848),r=t(5680);const i={id:"getting-started",title:"Getting Started",sidebar_position:2},a="Getting Started",c={id:"getting-started",title:"Getting Started",description:"This guide will walk you through the installation of protoconf, creating a basic configuration, and running the protoconf compiler to generate the final configuration.",source:"@site/docs/getting-started.mdx",sourceDirName:".",slug:"/getting-started",permalink:"/docs/0.1.7/getting-started",draft:!1,unlisted:!1,editUrl:"https://github.com/protoconf/protoconf/tree/main/website/protoconf/docs/getting-started.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"getting-started",title:"Getting Started",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/0.1.7/intro"},next:{title:"Configuration Validation",permalink:"/docs/0.1.7/validation"}},s={},l=[{value:"Installation",id:"installation",level:2},{value:"Defining the Configuration Structure",id:"defining-the-configuration-structure",level:2},{value:"Writing the Configuration Logic",id:"writing-the-configuration-logic",level:2},{value:"Running the protoconf Compiler",id:"running-the-protoconf-compiler",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.RP)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"getting-started",children:"Getting Started"}),"\n",(0,o.jsx)(n.p,{children:"This guide will walk you through the installation of protoconf, creating a basic configuration, and running the protoconf compiler to generate the final configuration."}),"\n",(0,o.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsx)(n.p,{children:"protoconf can be installed via Homebrew on macOS:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"brew install protoconf/tap/protoconf\n"})}),"\n",(0,o.jsxs)(n.p,{children:["For other platforms, download the latest release from the ",(0,o.jsx)(n.a,{href:"https://github.com/protoconf/protoconf",children:"protoconf GitHub repository"})," and add the binary to your ",(0,o.jsx)(n.code,{children:"PATH"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"defining-the-configuration-structure",children:"Defining the Configuration Structure"}),"\n",(0,o.jsxs)(n.p,{children:["First, you'll need to define your configuration structure using Protobuf. The Protobuf files should be stored under ",(0,o.jsx)(n.code,{children:"./src/<projectname>/<version>/<filename>.proto"}),". For example:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-protobuf",metastring:"title=./src/myproject/v1/server_config.proto",children:'syntax = "proto3";\n\npackage myproject.v1;\n\nmessage ServerConfiguration {\n  bool is_debug = 1;\n  uint32 max_connections = 2;\n  float max_payload_size_mb = 3;\n  google.protobuf.Duration request_timeout = 4;\n}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["In this example, ",(0,o.jsx)(n.code,{children:"ServerConfiguration"})," is the configuration structure for a server. It includes fields for debug mode (",(0,o.jsx)(n.code,{children:"is_debug"}),"), maximum number of connections (",(0,o.jsx)(n.code,{children:"max_connections"}),"), maximum payload size (",(0,o.jsx)(n.code,{children:"max_payload_size_mb"}),"), and request timeout (",(0,o.jsx)(n.code,{children:"request_timeout"}),")."]}),"\n",(0,o.jsx)(n.h2,{id:"writing-the-configuration-logic",children:"Writing the Configuration Logic"}),"\n",(0,o.jsxs)(n.p,{children:["Next, you'll write the configuration logic in a Starlark file, which should use the ",(0,o.jsx)(n.code,{children:".pconf"})," extension and be stored under ",(0,o.jsx)(n.code,{children:"./src/"}),". For example:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",metastring:"title=./src/myproject/server_config.pconf",children:'load("//myproject/v1/server_config.proto", "ServerConfiguration")\nload("//google/protobuf/duration.proto", "Duration")\n\ndef main():\n    return ServerConfiguration(\n        is_debug=True,\n        max_connections=1000,\n        max_payload_size_mb=64.0,\n        request_timeout=Duration(seconds=5),\n    )\n'})}),"\n",(0,o.jsxs)(n.p,{children:["In this example, the ",(0,o.jsx)(n.code,{children:"ServerConfiguration"})," message from the Protobuf file is loaded, and then a new ",(0,o.jsx)(n.code,{children:"ServerConfiguration"})," object is created in the ",(0,o.jsx)(n.code,{children:"main()"})," function."]}),"\n",(0,o.jsx)(n.h2,{id:"running-the-protoconf-compiler",children:"Running the protoconf Compiler"}),"\n",(0,o.jsx)(n.p,{children:"Finally, run the protoconf compiler to generate the final configuration:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"protoconf compile .\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The compiled configuration will be stored in a JSON file under ",(0,o.jsx)(n.code,{children:"./materialized_configs/<projectname>/<filename>.materialized_JSON"}),". For example, ",(0,o.jsx)(n.code,{children:"./materialized_configs/myproject/server_config.materialized_JSON"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"This JSON file contains the final, compiled configuration that your application can consume."}),"\n",(0,o.jsx)(n.p,{children:"With this, you've created your first protoconf configuration! The next section will cover more advanced topics, such as configuration validation and how to consume configuration updates in different programming languages."})]})}function u(e={}){const{wrapper:n}={...(0,r.RP)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},5680:(e,n,t)=>{t.d(n,{RP:()=>l});var o=t(6540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),l=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(t),f=r,g=p["".concat(s,".").concat(f)]||p[f]||d[f]||i;return t?o.createElement(g,a(a({ref:n},u),{},{components:t})):o.createElement(g,a({ref:n},u))}));u.displayName="MDXCreateElement"}}]);