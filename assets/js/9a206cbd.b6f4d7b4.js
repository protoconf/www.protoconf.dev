"use strict";(self.webpackChunkprotoconf=self.webpackChunkprotoconf||[]).push([[1276],{3905:(e,n,o)=>{o.d(n,{Zo:()=>f,kt:()=>d});var t=o(7294);function r(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function c(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,t)}return o}function a(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?c(Object(o),!0).forEach((function(n){r(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):c(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function i(e,n){if(null==e)return{};var o,t,r=function(e,n){if(null==e)return{};var o,t,r={},c=Object.keys(e);for(t=0;t<c.length;t++)o=c[t],n.indexOf(o)>=0||(r[o]=e[o]);return r}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(t=0;t<c.length;t++)o=c[t],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var p=t.createContext({}),s=function(e){var n=t.useContext(p),o=n;return e&&(o="function"==typeof e?e(n):a(a({},n),e)),o},f=function(e){var n=s(e.components);return t.createElement(p.Provider,{value:n},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var o=e.components,r=e.mdxType,c=e.originalType,p=e.parentName,f=i(e,["components","mdxType","originalType","parentName"]),l=s(o),m=r,d=l["".concat(p,".").concat(m)]||l[m]||u[m]||c;return o?t.createElement(d,a(a({ref:n},f),{},{components:o})):t.createElement(d,a({ref:n},f))}));function d(e,n){var o=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var c=o.length,a=new Array(c);a[0]=m;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[l]="string"==typeof e?e:r,a[1]=i;for(var s=2;s<c;s++)a[s]=o[s];return t.createElement.apply(null,a)}return t.createElement.apply(null,o)}m.displayName="MDXCreateElement"},8202:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>s});var t=o(7462),r=(o(7294),o(3905));const c={},a="Using protoconf exec",i={unversionedId:"protoconf-exec",id:"protoconf-exec",title:"Using protoconf exec",description:"It's very likely that your infra relies on many components which does not have native protoconf integration. You can still use protoconf to code their config and use some wrappers around the process you are running in order to write and reload the config. protoconf exec aims to be a general purpose way to do so (still WIP and many features are not implemented)",source:"@site/docs/protoconf-exec.md",sourceDirName:".",slug:"/protoconf-exec",permalink:"/docs/protoconf-exec",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/protoconf-exec.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Mutation RPC usage",permalink:"/docs/mutation-rpc"}},p={},s=[{value:"Import the exec config to your workspace",id:"import-the-exec-config-to-your-workspace",level:3},{value:"Create a dummy proto and config",id:"create-a-dummy-proto-and-config",level:3},{value:"Create an <code>exec</code> config",id:"create-an-exec-config",level:3}],f={toc:s},l="wrapper";function u(e){let{components:n,...o}=e;return(0,r.kt)(l,(0,t.Z)({},f,o,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"using-protoconf-exec"},"Using protoconf exec"),(0,r.kt)("p",null,"It's very likely that your infra relies on many components which does not have native ",(0,r.kt)("inlineCode",{parentName:"p"},"protoconf")," integration. You can still use protoconf to code their config and use some wrappers around the process you are running in order to write and reload the config. ",(0,r.kt)("inlineCode",{parentName:"p"},"protoconf exec")," aims to be a general purpose way to do so (still WIP and many features are not implemented)"),(0,r.kt)("h3",{id:"import-the-exec-config-to-your-workspace"},"Import the exec config to your workspace"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ mkdir -p src/exec\ncurl -Lo src/exec/exec_config.proto https://raw.githubusercontent.com/protoconf/protoconf/v0.1.3/exec/config/exec_config.proto\n")),(0,r.kt)("h3",{id:"create-a-dummy-proto-and-config"},"Create a dummy proto and config"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-protobuf"},'// file: ./src/myservice/myconfig.proto\nsyntax = "proto3";\nmessage MyConfig {\n  string name = 1;\n  uint32 timeout = 2;\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'"""\nfile: ./src/myservice/myconfig.pconf\n"""\nload("myconfig.proto", "MyConfig")\n\nconfig = MyConfig(name="test", timeout=3)\n\ndef main():\n    return config\n')),(0,r.kt)("h3",{id:"create-an-exec-config"},"Create an ",(0,r.kt)("inlineCode",{parentName:"h3"},"exec")," config"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'"""\nGenerates tf.json files under ./tfconfigs\n"""\nload(\n    "//exec/exec_config.proto",\n    "Config",\n    "WatcherConfig",\n    "Action",\n    "ActionTypeWriteToFile",\n)\n\nconfigs = [\n    "mysservice/myconfig"\n]\n\n\ndef main():\n    return Config(\n        items=[\n            WatcherConfig(\n                path=path,\n                proto_file="myservice/myconfig.proto",\n                actions=[\n                    Action(file=ActionTypeWriteToFile(path="tfconfigs/%s.json" % path))\n                ],\n            )\n            for path in configs\n        ]\n    )\n')))}u.isMDXComponent=!0}}]);