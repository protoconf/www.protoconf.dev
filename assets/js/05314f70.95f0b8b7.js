"use strict";(self.webpackChunkprotoconf=self.webpackChunkprotoconf||[]).push([[9961],{4227:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>u});var n=r(4848),i=r(5680);const o={sidebar_position:1},c="Production Architecture",a={id:"production/production-architecture",title:"Production Architecture",description:"The production architecture of protoconf involves several components working together to provide dynamic, event-driven configuration management. This architecture is designed to support high availability, scalability, and real-time updates.",source:"@site/docs/production/production-architecture.mdx",sourceDirName:"production",slug:"/production/production-architecture",permalink:"/docs/0.1.7/production/production-architecture",draft:!1,unlisted:!1,editUrl:"https://github.com/protoconf/protoconf/tree/main/website/protoconf/docs/production/production-architecture.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Standard Libraries",permalink:"/docs/0.1.7/advanced-usage/starlib"},next:{title:"Inserting Configurations",permalink:"/docs/0.1.7/production/inserting-configurations"}},s={},u=[{value:"Architecture Overview",id:"architecture-overview",level:2}];function l(e){const t={h1:"h1",h2:"h2",li:"li",mermaid:"mermaid",ol:"ol",p:"p",strong:"strong",...(0,i.RP)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"production-architecture",children:"Production Architecture"}),"\n",(0,n.jsx)(t.p,{children:"The production architecture of protoconf involves several components working together to provide dynamic, event-driven configuration management. This architecture is designed to support high availability, scalability, and real-time updates."}),"\n",(0,n.jsx)(t.h2,{id:"architecture-overview",children:"Architecture Overview"}),"\n",(0,n.jsx)(t.mermaid,{value:"flowchart TB\n  A(SCM) --\x3e|Event| B((.//\\nprotoconf\\ninsert))\n  B --\x3e|Write| C[(KVStore)]\n  C <--\x3e |Replication| N1[(KVStore)] &  N2[(KVStore)]\n  N1 --\x3e|Watch| D{{.//\\nprotoconf\\nagent}}\n  N2 --\x3e|Watch| E{{.//\\nprotoconf\\nagent}}\n  E --\x3e|Stream| F(((Applications)))\n  D --\x3e|Stream| G(((Applications)))\n"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Source Code Management (SCM):"})," This is where your configuration files and your application code reside. Whenever there is an event (such as a commit or a merge), it triggers the next step in the process."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"protoconf insert:"})," This is a command that is run in response to events from the SCM. It takes the configuration files and inserts them into the key-value store. This command can be triggered manually, or automatically via webhooks or CI/CD pipelines."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Key-Value Store (Consul/Etcd/Zookeeper):"})," This is the centralized store where all the configurations are stored. The key-value store ensures high availability and distributed access to the configurations."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"protoconf agent:"})," This is a service that listens for changes in the key-value store. When a configuration is inserted or updated, the protoconf agent picks up the change and prepares to distribute it."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Applications:"})," These are your actual applications that need the configurations. They connect to the protoconf agent and receive real-time configuration updates via gRPC."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"This architecture allows for rapid response to configuration changes, ensuring that your applications always have the most up-to-date configurations. This is particularly useful in a microservices architecture where multiple services need to stay in sync with their configurations."})]})}function p(e={}){const{wrapper:t}={...(0,i.RP)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},5680:(e,t,r)=>{r.d(t,{RP:()=>u});var n=r(6540);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=u(r),h=i,f=d["".concat(s,".").concat(h)]||d[h]||l[h]||o;return r?n.createElement(f,c(c({ref:t},p),{},{components:r})):n.createElement(f,c({ref:t},p))}));p.displayName="MDXCreateElement"}}]);